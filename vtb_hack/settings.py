"""
Django settings for vtb_hack project.

Generated by 'django-admin startproject' using Django 3.2.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import logging
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
from core.services.env_vars import os_getenv

BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&+kywos0&e3&th^r@-()r&%sv#ykaqqazesrfm2m&ldkq)73*6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # packages & libs
    'rest_framework',
    'corsheaders',
    'django_filters',

    # apps
    'api.apps.ApiConfig',
    'core.apps.CoreConfig',
    'schema.apps.SchemaConfig',
    'websockets.apps.WebsocketsConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'vtb_hack.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'vtb_hack.wsgi.application'
ASGI_APPLICATION = 'vtb_hack.asgi.application'


CHANNEL_LAYERS = {
    'default': {
        "BACKEND": "channels.layers.InMemoryChannelLayer"
    },
}

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os_getenv('POSTGRES_NAME', 'hack'),
        'USER': os_getenv('POSTGRES_USER', 'hack'),
        'PASSWORD': os_getenv('POSTGRES_PASSWORD', 'hack'),
        'HOST': os_getenv('POSTGRES_HOST', 'localhost'),
        'PORT': int(os_getenv('POSTGRES_PORT', '5432')),
    }
}

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 30,
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'core.authentication.ExpiringTokenAuthentication',
    ],
}

AUTH_UPDATE_TIME = 2  # in minutes

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/back/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")
# STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

MEDIA_URL = '/back/media/'
MEDIA_ROOT = 'uploads/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

logging.basicConfig(
        format='%(asctime)s %(levelname)-8s %(module)s %(message)s',
        level=os_getenv('LOG_LEVEL', 'DEBUG'),
        datefmt='%Y-%m-%d %H:%M:%S'
    )

DATAHUB_LOGIN = 'datahub'
DATAHUB_PASSWORD = 'datahub'

START_SCHEDULER = True

AUTHLIB_OAUTH_CLIENTS = {
    # 'google': {
    #     'client_id': os.getenv('GOOGLE_CLIENT_ID'),
    #     'client_secret': os.getenv('GOOGLE_CLIENT_SECRET'),
    # }
    'google': {
        'client_id': '973498922490-9rmatp9n90dc2l7b9mu3d8ko83v46540.apps.googleusercontent.com',
        'client_secret': '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',
    }
}
CONF_URL = 'https://accounts.google.com/.well-known/openid-configuration'

try:
    from vtb_hack.dev_settings import *
except ImportError:
    pass
